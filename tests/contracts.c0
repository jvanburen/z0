#use <z0>
int main() {
  return 0;
}

int simple_contracts(int x, int y)
//@requires z0_requires(x == y);
//@ensures z0_ensures(\result == x + y);
{
  return x + y;
}


int multiple_contracts(int x, int y)
//@requires z0_requires(x >= 0);
//@requires z0_requires(y >= 0);
//@ensures z0_ensures(\result <= x + y);
//@ensures z0_ensures(\result >= x + y);
{
  return x + y;
}


int complex_contracts(int x, int y)
//@requires z0_requires(x >= 0 && y >= 0);
//@ensures z0_ensures(\result <= x + y  && \result >= x + y);
{
  return x + y;
}


int loop_invariant_test(int x, int y)
{
  int z = x;
  for(int i = 0; i < y; i++)
  //@loop_invariant z0_loop_invariant(z == x + i);
  {
    z = z + 1;
  }
  return z;
}

int complex_postconditions(int x, int y)
//@ensures z0_ensures(\result <= x + y  && \result >= x + y);
{
  if (x == y) {
    return x * 2;
  } else {
    if (x > y) {
      return x + y;
    } else {
      return y + x;
    }
  }
}
